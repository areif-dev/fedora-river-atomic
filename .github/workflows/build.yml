---

name: Build, Publish, and Sign Distroboxes Containers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-publish-sign-containers:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Install cosign
      run: |
        COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r .tag_name | sed 's/v//')
        curl -Lo cosign https://github.com/sigstore/cosign/releases/download/v$COSIGN_VERSION/cosign-linux-amd64
        chmod +x cosign
        sudo mv cosign /usr/local/bin/

    - name: Log in to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build, Push, and Sign Containers
      run: |
        BASE_DIR="distroboxes"

        # Check if the base directory exists
        if [ ! -d "$BASE_DIR" ]; then
            echo "Directory $BASE_DIR does not exist."
            exit 1
        fi

        # Loop through each subdirectory in the base directory
        for SUBDIR in "$BASE_DIR"/*; do
            if [ -d "$SUBDIR" ]; then
                IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/$(basename "$SUBDIR")-image"
                echo "Building and pushing $IMAGE_NAME from $SUBDIR:"
                # Change into the subdirectory
                cd "$SUBDIR"
                
                # Check if the Containerfile exists
                if [ -f "Containerfile" ]; then
                    # Build the container image using podman
                    podman build -t "$IMAGE_NAME" .
                    if [ $? -ne 0 ]; then
                        echo "Failed to build Containerfile in $SUBDIR."
                        exit 1
                    else 
                        echo "Successfully built $IMAGE_NAME."
                    fi
                    # Push the container image to GHCR
                    podman push "$IMAGE_NAME"
                    if [ $? -ne 0 ]; then
                        echo "Failed to push $IMAGE_NAME to GHCR."
                        exit 1
                    else
                        echo "Successfully pushed $IMAGE_NAME to GHCR."
                    fi
                    # Sign the container image using cosign
                    cosign sign --key ${{ secrets.SIGNING_SECRET }} $IMAGE_NAME
                    if [ $? -ne 0 ]; then
                        echo "Failed to sign $IMAGE_NAME."
                        exit 1
                    else
                        echo "Successfully signed $IMAGE_NAME."
                    fi
                else
                    echo "No Containerfile found in $SUBDIR."
                fi

                # Change back to the base directory
                cd - > /dev/null
                echo ""
            fi
        done

    env:
      COSIGN_EXPERIMENTAL: 1

